<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
    <meta>
        <author>Jota Teles (http://www.jotateles.com.br) </author>
        <description>Essa tabela retorna dados gerais sobre uma revenda cadastrada no site www.carrosaojose.com.br</description>        
        <documentationURL> http://github.com/teles/yql-tables</documentationURL>
        <sampleQuery></sampleQuery>        
    </meta>
      <bindings>
        <select produces="XML">
        <execute><![CDATA[
          // var data = request.accept('text/html').get().response;
          var url = "http://www.carrosaojose.com.br/veiculos/2289233-chevrolet-astra-sedan-2.0-4p-flex-elegance.html?e=1"
          var data = y.rest(url).accept('text/html').get().response;    

          var carroXpath = {
              nome: "//div[contains(@class, 'nomeVeic')]/div[contains(@class, 'titulo')]",
              ano: "//div[contains(@class, 'nomeVeic')]/div[contains(@class, 'ano')]",
              valor: "//div[contains(@class, 'valorVeic')]",
              combustivelCorQuilometragem: "//div[contains(@class, 'topoDetDesc')]/div[1]",
              opcionais: "//div[contains(@class, 'desc-opcionais-div')]",
              observacoes: "//div[contains(@class, 'observacoes')]//div[contains(@class, 'observacoes')]",
              fotos: "//ul[contains(@class, 'ul-lightbox')]//a[contains(@class, 'foto-galeria')]",
          };

          function _limparTagsHtml(texto) {
            return texto.replace(/(<([^>]+)>)/ig,"");            
          }

          // Definição dos elementos raiz com dados do carro
          var nome = y.xpath(data, carroXpath.nome);
          var ano = y.xpath(data, carroXpath.ano);
          var valor = y.xpath(data, carroXpath.valor);
          var combustivelCorQuilometragem = y.xpath(data, carroXpath.combustivelCorQuilometragem);
          var opcionais = y.xpath(data, carroXpath.opcionais);
          var observacoes = y.xpath(data, carroXpath.observacoes);
          var fotos = y.xpath(data, carroXpath.fotos);        

          // Montando objeto revenda com dados raspados da url
          var carro = {}
          carro.nome = nome.toString();
          carro.ano = ano.toString();
          carro.valor = valor.toString();
          carro.combustivelCorQuilometragem = combustivelCorQuilometragem.toString();
          carro.opcionais = _limparTagsHtml(opcionais.toString());
          carro.observacoes = observacoes.toString();
          carro.fotos = [];
          
          // Montando objeto fotos
          for each (var fotoHref in fotos.@href) {
            carro.fotos.push(fotoHref);
          }

          // Montando xml com os dados do objeto revenda
          carroXml = <carro></carro>;
          carroXml.appendChild(<nome>{carro.nome}</nome>);
          carroXml.appendChild(<ano>{carro.ano}</ano>);
          carroXml.appendChild(<valor>{carro.valor}</valor>);
          carroXml.appendChild(<infos>{carro.combustivelCorQuilometragem}</infos>);
          carroXml.appendChild(<opcionais>{carro.opcionais}</opcionais>);
          carroXml.appendChild(<observacoes>{carro.observacoes}</observacoes>);

          if(carro.fotos.length > 0) {
            fotosNode = <fotos></fotos>;
            for each(var foto in carro.fotos) {
              fotosNode.appendChild(<foto>{foto}</foto>);
            }            
            carroXml.appendChild(fotosNode);
          }
          
          response.object = carroXml;

        ]]>
        </execute>
      </select>
      </bindings>
</table>